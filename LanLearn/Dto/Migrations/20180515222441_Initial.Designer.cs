// <auto-generated />
using Dto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Dto.Migrations
{
    [DbContext(typeof(LanLearnDbContext))]
    [Migration("20180515222441_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dto.Models.EnglishDictionary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("EnglishWord");

                    b.Property<int?>("PartOfSpeechId");

                    b.Property<string>("PolishTranslate");

                    b.Property<int>("Rank");

                    b.HasKey("Id");

                    b.HasIndex("PartOfSpeechId");

                    b.ToTable("EnglishDictionaries");
                });

            modelBuilder.Entity("Dto.Models.PartOfSpeech", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Symbol");

                    b.HasKey("Id");

                    b.ToTable("PartsOfSpeech");
                });

            modelBuilder.Entity("Dto.Models.EnglishDictionary", b =>
                {
                    b.HasOne("Dto.Models.PartOfSpeech", "PartOfSpeech")
                        .WithMany()
                        .HasForeignKey("PartOfSpeechId");
                });
#pragma warning restore 612, 618
        }
    }
}
